{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "15215721",
   "metadata": {},
   "source": [
    "# Analysis of Bin Master Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e1b7b6b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: dash in c:\\users\\yamup\\anaconda3\\lib\\site-packages (2.7.0)\n",
      "Requirement already satisfied: dash-core-components==2.0.0 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from dash) (2.0.0)\n",
      "Requirement already satisfied: plotly>=5.0.0 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from dash) (5.10.0)\n",
      "Requirement already satisfied: dash-table==5.0.0 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from dash) (5.0.0)\n",
      "Requirement already satisfied: dash-html-components==2.0.0 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from dash) (2.0.0)\n",
      "Requirement already satisfied: Flask>=1.0.4 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from dash) (1.1.2)\n",
      "Requirement already satisfied: Werkzeug>=0.15 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from Flask>=1.0.4->dash) (1.0.1)\n",
      "Requirement already satisfied: click>=5.1 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from Flask>=1.0.4->dash) (7.1.2)\n",
      "Requirement already satisfied: itsdangerous>=0.24 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from Flask>=1.0.4->dash) (1.1.0)\n",
      "Requirement already satisfied: Jinja2>=2.10.1 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from Flask>=1.0.4->dash) (2.11.3)\n",
      "Requirement already satisfied: MarkupSafe>=0.23 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from Jinja2>=2.10.1->Flask>=1.0.4->dash) (1.1.1)\n",
      "Requirement already satisfied: tenacity>=6.2.0 in c:\\users\\yamup\\anaconda3\\lib\\site-packages (from plotly>=5.0.0->dash) (8.1.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install dash"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fd193d56",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing necessary libraries\n",
    "import pandas as pd\n",
    "import dash\n",
    "from dash import dcc\n",
    "from dash import html\n",
    "from dash.dependencies import Input, Output\n",
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "import random\n",
    "import string\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "794a9e57",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv('Test_data2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "931908e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BinNo</th>\n",
       "      <th>FloorNo</th>\n",
       "      <th>AisleNo</th>\n",
       "      <th>BayNo</th>\n",
       "      <th>BatchLotNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>StockInHand</th>\n",
       "      <th>SumofStock</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8-A-09</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>9.0</td>\n",
       "      <td>P31522-1</td>\n",
       "      <td>DCHEWL7</td>\n",
       "      <td>200.0</td>\n",
       "      <td>546.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8-A-05</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>5.0</td>\n",
       "      <td>P01823-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>90.0</td>\n",
       "      <td>1356.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8-A-05</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>5.0</td>\n",
       "      <td>P01923-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1356.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8-A-09</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>9.0</td>\n",
       "      <td>P31422-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>135.0</td>\n",
       "      <td>546.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8-A-37</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>37.0</td>\n",
       "      <td>P313522-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>1.0</td>\n",
       "      <td>358.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1002</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1003</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1006 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       BinNo FloorNo AisleNo  BayNo BatchLotNo StockCode  StockInHand  \\\n",
       "0     8-A-09       8       A    9.0   P31522-1   DCHEWL7        200.0   \n",
       "1     8-A-05       8       A    5.0   P01823-1   DCHEWM7         90.0   \n",
       "2     8-A-05       8       A    5.0   P01923-1   DCHEWM7        180.0   \n",
       "3     8-A-09       8       A    9.0   P31422-1   DCHEWM7        135.0   \n",
       "4     8-A-37       8       A   37.0  P313522-1   DCHEWM7          1.0   \n",
       "...      ...     ...     ...    ...        ...       ...          ...   \n",
       "1001     NaN     NaN     NaN    NaN        NaN       NaN          NaN   \n",
       "1002     NaN     NaN     NaN    NaN        NaN       NaN          NaN   \n",
       "1003     NaN     NaN     NaN    NaN        NaN       NaN          NaN   \n",
       "1004     NaN     NaN     NaN    NaN        NaN       NaN          NaN   \n",
       "1005     NaN     NaN     NaN    NaN        NaN       NaN          NaN   \n",
       "\n",
       "      SumofStock  \n",
       "0          546.0  \n",
       "1         1356.0  \n",
       "2         1356.0  \n",
       "3          546.0  \n",
       "4          358.0  \n",
       "...          ...  \n",
       "1001         0.0  \n",
       "1002         0.0  \n",
       "1003         0.0  \n",
       "1004         0.0  \n",
       "1005         0.0  \n",
       "\n",
       "[1006 rows x 8 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "30ad767a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BinNo</th>\n",
       "      <th>FloorNo</th>\n",
       "      <th>AisleNo</th>\n",
       "      <th>BayNo</th>\n",
       "      <th>BatchLotNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>StockInHand</th>\n",
       "      <th>SumofStock</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8-A-09</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>9.0</td>\n",
       "      <td>P31522-1</td>\n",
       "      <td>DCHEWL7</td>\n",
       "      <td>200.0</td>\n",
       "      <td>546.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8-A-05</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>5.0</td>\n",
       "      <td>P01823-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>90.0</td>\n",
       "      <td>1356.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8-A-05</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>5.0</td>\n",
       "      <td>P01923-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1356.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8-A-09</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>9.0</td>\n",
       "      <td>P31422-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>135.0</td>\n",
       "      <td>546.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8-A-37</td>\n",
       "      <td>8</td>\n",
       "      <td>A</td>\n",
       "      <td>37.0</td>\n",
       "      <td>P313522-1</td>\n",
       "      <td>DCHEWM7</td>\n",
       "      <td>1.0</td>\n",
       "      <td>358.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>4-S-02</td>\n",
       "      <td>4</td>\n",
       "      <td>S</td>\n",
       "      <td>2.0</td>\n",
       "      <td>40628</td>\n",
       "      <td>PD120</td>\n",
       "      <td>13.0</td>\n",
       "      <td>545.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>4-S-02</td>\n",
       "      <td>4</td>\n",
       "      <td>S</td>\n",
       "      <td>2.0</td>\n",
       "      <td>SW41010</td>\n",
       "      <td>YMC60-PAH</td>\n",
       "      <td>3.0</td>\n",
       "      <td>545.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>4-S-02</td>\n",
       "      <td>4</td>\n",
       "      <td>S</td>\n",
       "      <td>2.0</td>\n",
       "      <td>SW070722</td>\n",
       "      <td>YVS30</td>\n",
       "      <td>11.0</td>\n",
       "      <td>545.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>4-S-01</td>\n",
       "      <td>4</td>\n",
       "      <td>S</td>\n",
       "      <td>1.0</td>\n",
       "      <td>SW100422</td>\n",
       "      <td>YVS30</td>\n",
       "      <td>3.0</td>\n",
       "      <td>287.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>4-S-01</td>\n",
       "      <td>4</td>\n",
       "      <td>S</td>\n",
       "      <td>1.0</td>\n",
       "      <td>SW35837</td>\n",
       "      <td>YM120-PAH</td>\n",
       "      <td>12.0</td>\n",
       "      <td>287.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>994 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BinNo FloorNo AisleNo  BayNo BatchLotNo  StockCode  StockInHand  \\\n",
       "0    8-A-09       8       A    9.0   P31522-1    DCHEWL7        200.0   \n",
       "1    8-A-05       8       A    5.0   P01823-1    DCHEWM7         90.0   \n",
       "2    8-A-05       8       A    5.0   P01923-1    DCHEWM7        180.0   \n",
       "3    8-A-09       8       A    9.0   P31422-1    DCHEWM7        135.0   \n",
       "4    8-A-37       8       A   37.0  P313522-1    DCHEWM7          1.0   \n",
       "..      ...     ...     ...    ...        ...        ...          ...   \n",
       "989  4-S-02       4       S    2.0      40628      PD120         13.0   \n",
       "990  4-S-02       4       S    2.0    SW41010  YMC60-PAH          3.0   \n",
       "991  4-S-02       4       S    2.0   SW070722      YVS30         11.0   \n",
       "992  4-S-01       4       S    1.0   SW100422      YVS30          3.0   \n",
       "993  4-S-01       4       S    1.0    SW35837  YM120-PAH         12.0   \n",
       "\n",
       "     SumofStock  \n",
       "0         546.0  \n",
       "1        1356.0  \n",
       "2        1356.0  \n",
       "3         546.0  \n",
       "4         358.0  \n",
       "..          ...  \n",
       "989       545.0  \n",
       "990       545.0  \n",
       "991       545.0  \n",
       "992       287.0  \n",
       "993       287.0  \n",
       "\n",
       "[994 rows x 8 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3abb9874",
   "metadata": {},
   "outputs": [],
   "source": [
    "#sorting the bay and Ailse in an ascending order\n",
    "data = data.sort_values(by=[\"BayNo\", \"AisleNo\"],ascending=[True, True])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "57d8828b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BinNo</th>\n",
       "      <th>FloorNo</th>\n",
       "      <th>AisleNo</th>\n",
       "      <th>BayNo</th>\n",
       "      <th>BatchLotNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>StockInHand</th>\n",
       "      <th>SumofStock</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>4-A-01</td>\n",
       "      <td>4</td>\n",
       "      <td>A</td>\n",
       "      <td>1.0</td>\n",
       "      <td>SW40937</td>\n",
       "      <td>YM60</td>\n",
       "      <td>83.0</td>\n",
       "      <td>83.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>5-A-01</td>\n",
       "      <td>5</td>\n",
       "      <td>A</td>\n",
       "      <td>1.0</td>\n",
       "      <td>SW40631</td>\n",
       "      <td>YUCA60-PAH</td>\n",
       "      <td>84.0</td>\n",
       "      <td>84.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>S-A-01</td>\n",
       "      <td>S</td>\n",
       "      <td>A</td>\n",
       "      <td>1.0</td>\n",
       "      <td>SW35956</td>\n",
       "      <td>YMCM30</td>\n",
       "      <td>639.0</td>\n",
       "      <td>639.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>7-A-01</td>\n",
       "      <td>7</td>\n",
       "      <td>A</td>\n",
       "      <td>1.0</td>\n",
       "      <td>22822</td>\n",
       "      <td>YMBAV90</td>\n",
       "      <td>107.0</td>\n",
       "      <td>107.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>8-B-01</td>\n",
       "      <td>8</td>\n",
       "      <td>B</td>\n",
       "      <td>1.0</td>\n",
       "      <td>P31522 -1</td>\n",
       "      <td>DCHEWL7</td>\n",
       "      <td>172.0</td>\n",
       "      <td>250366.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>8-C-42</td>\n",
       "      <td>8</td>\n",
       "      <td>C</td>\n",
       "      <td>42.0</td>\n",
       "      <td>N968120240</td>\n",
       "      <td>IMOV01</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>360000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>715</th>\n",
       "      <td>6-D-42</td>\n",
       "      <td>6</td>\n",
       "      <td>D</td>\n",
       "      <td>42.0</td>\n",
       "      <td>P00623-3</td>\n",
       "      <td>YMSS7LR</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>719</th>\n",
       "      <td>5-D-42</td>\n",
       "      <td>5</td>\n",
       "      <td>D</td>\n",
       "      <td>42.0</td>\n",
       "      <td>103026SW</td>\n",
       "      <td>YSO500</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>1368.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>827</th>\n",
       "      <td>8-E-42</td>\n",
       "      <td>8</td>\n",
       "      <td>E</td>\n",
       "      <td>42.0</td>\n",
       "      <td>N968120240</td>\n",
       "      <td>IMOV01</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>360000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>872</th>\n",
       "      <td>6-E-42</td>\n",
       "      <td>6</td>\n",
       "      <td>E</td>\n",
       "      <td>42.0</td>\n",
       "      <td>P09523-03</td>\n",
       "      <td>YMSS7MR</td>\n",
       "      <td>1520.0</td>\n",
       "      <td>1520.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>994 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BinNo FloorNo AisleNo  BayNo  BatchLotNo   StockCode  StockInHand  \\\n",
       "14   4-A-01       4       A    1.0     SW40937        YM60         83.0   \n",
       "95   5-A-01       5       A    1.0     SW40631  YUCA60-PAH         84.0   \n",
       "106  S-A-01       S       A    1.0     SW35956      YMCM30        639.0   \n",
       "235  7-A-01       7       A    1.0       22822     YMBAV90        107.0   \n",
       "237  8-B-01       8       B    1.0   P31522 -1     DCHEWL7        172.0   \n",
       "..      ...     ...     ...    ...         ...         ...          ...   \n",
       "492  8-C-42       8       C   42.0  N968120240      IMOV01     360000.0   \n",
       "715  6-D-42       6       D   42.0    P00623-3     YMSS7LR       1300.0   \n",
       "719  5-D-42       5       D   42.0    103026SW      YSO500       1368.0   \n",
       "827  8-E-42       8       E   42.0  N968120240      IMOV01     360000.0   \n",
       "872  6-E-42       6       E   42.0   P09523-03     YMSS7MR       1520.0   \n",
       "\n",
       "     SumofStock  \n",
       "14         83.0  \n",
       "95         84.0  \n",
       "106       639.0  \n",
       "235       107.0  \n",
       "237    250366.0  \n",
       "..          ...  \n",
       "492    360000.0  \n",
       "715      1300.0  \n",
       "719      1368.0  \n",
       "827    360000.0  \n",
       "872      1520.0  \n",
       "\n",
       "[994 rows x 8 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ba68de1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=data.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "584059c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-14-4488cebeedb5>:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['AisleNo'] = data['AisleNo'].str.upper()\n",
      "<ipython-input-14-4488cebeedb5>:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['BayNo'] = data['BayNo'].astype(int)\n"
     ]
    }
   ],
   "source": [
    "data['AisleNo'] = data['AisleNo'].str.upper()\n",
    "# Convert 'BayNo' to integers\n",
    "data['BayNo'] = data['BayNo'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "11c4c25d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BinNo</th>\n",
       "      <th>FloorNo</th>\n",
       "      <th>AisleNo</th>\n",
       "      <th>BayNo</th>\n",
       "      <th>BatchLotNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>StockInHand</th>\n",
       "      <th>SumofStock</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>4-A-01</td>\n",
       "      <td>4</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>SW40937</td>\n",
       "      <td>YM60</td>\n",
       "      <td>83.0</td>\n",
       "      <td>83.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>5-A-01</td>\n",
       "      <td>5</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>SW40631</td>\n",
       "      <td>YUCA60-PAH</td>\n",
       "      <td>84.0</td>\n",
       "      <td>84.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>S-A-01</td>\n",
       "      <td>S</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>SW35956</td>\n",
       "      <td>YMCM30</td>\n",
       "      <td>639.0</td>\n",
       "      <td>639.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>7-A-01</td>\n",
       "      <td>7</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>22822</td>\n",
       "      <td>YMBAV90</td>\n",
       "      <td>107.0</td>\n",
       "      <td>107.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>8-B-01</td>\n",
       "      <td>8</td>\n",
       "      <td>B</td>\n",
       "      <td>1</td>\n",
       "      <td>P31522 -1</td>\n",
       "      <td>DCHEWL7</td>\n",
       "      <td>172.0</td>\n",
       "      <td>250366.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>8-C-42</td>\n",
       "      <td>8</td>\n",
       "      <td>C</td>\n",
       "      <td>42</td>\n",
       "      <td>N968120240</td>\n",
       "      <td>IMOV01</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>360000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>715</th>\n",
       "      <td>6-D-42</td>\n",
       "      <td>6</td>\n",
       "      <td>D</td>\n",
       "      <td>42</td>\n",
       "      <td>P00623-3</td>\n",
       "      <td>YMSS7LR</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>719</th>\n",
       "      <td>5-D-42</td>\n",
       "      <td>5</td>\n",
       "      <td>D</td>\n",
       "      <td>42</td>\n",
       "      <td>103026SW</td>\n",
       "      <td>YSO500</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>1368.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>827</th>\n",
       "      <td>8-E-42</td>\n",
       "      <td>8</td>\n",
       "      <td>E</td>\n",
       "      <td>42</td>\n",
       "      <td>N968120240</td>\n",
       "      <td>IMOV01</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>360000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>872</th>\n",
       "      <td>6-E-42</td>\n",
       "      <td>6</td>\n",
       "      <td>E</td>\n",
       "      <td>42</td>\n",
       "      <td>P09523-03</td>\n",
       "      <td>YMSS7MR</td>\n",
       "      <td>1520.0</td>\n",
       "      <td>1520.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>994 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BinNo FloorNo AisleNo  BayNo  BatchLotNo   StockCode  StockInHand  \\\n",
       "14   4-A-01       4       A      1     SW40937        YM60         83.0   \n",
       "95   5-A-01       5       A      1     SW40631  YUCA60-PAH         84.0   \n",
       "106  S-A-01       S       A      1     SW35956      YMCM30        639.0   \n",
       "235  7-A-01       7       A      1       22822     YMBAV90        107.0   \n",
       "237  8-B-01       8       B      1   P31522 -1     DCHEWL7        172.0   \n",
       "..      ...     ...     ...    ...         ...         ...          ...   \n",
       "492  8-C-42       8       C     42  N968120240      IMOV01     360000.0   \n",
       "715  6-D-42       6       D     42    P00623-3     YMSS7LR       1300.0   \n",
       "719  5-D-42       5       D     42    103026SW      YSO500       1368.0   \n",
       "827  8-E-42       8       E     42  N968120240      IMOV01     360000.0   \n",
       "872  6-E-42       6       E     42   P09523-03     YMSS7MR       1520.0   \n",
       "\n",
       "     SumofStock  \n",
       "14         83.0  \n",
       "95         84.0  \n",
       "106       639.0  \n",
       "235       107.0  \n",
       "237    250366.0  \n",
       "..          ...  \n",
       "492    360000.0  \n",
       "715      1300.0  \n",
       "719      1368.0  \n",
       "827    360000.0  \n",
       "872      1520.0  \n",
       "\n",
       "[994 rows x 8 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1c64f9a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#adding Bin_Type column with the random values\n",
    "bin_type=[random.choice(['PickFace','Goodsin','Null']) for _ in range(len(data))]\n",
    "#generating the random bin values for the len of the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b6026e17",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-17-908ca6e803f1>:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['BinType']=bin_type\n"
     ]
    }
   ],
   "source": [
    "#adding new column and assigning the values to that column\n",
    "data['BinType']=bin_type\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f543a91a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-18-dabbc5a4f5e0>:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['BinZone']=bin_zone\n"
     ]
    }
   ],
   "source": [
    "#bin_zone=[random.choice(['A','B','C']) for _ in range(len(data))]\n",
    "#assigning random values to the \n",
    "bin_zone=[random.choice(string.ascii_uppercase) for _ in range(len(data))]\n",
    "data['BinZone']=bin_zone"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "21001a2e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-19-fda2492d0c02>:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['FloorNo'] = data['FloorNo'].str.upper()  # Convert all floor values to uppercase\n"
     ]
    }
   ],
   "source": [
    "data['FloorNo'] = data['FloorNo'].str.upper()  # Convert all floor values to uppercase\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f37a4f70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BinNo</th>\n",
       "      <th>FloorNo</th>\n",
       "      <th>AisleNo</th>\n",
       "      <th>BayNo</th>\n",
       "      <th>BatchLotNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>StockInHand</th>\n",
       "      <th>SumofStock</th>\n",
       "      <th>BinType</th>\n",
       "      <th>BinZone</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>4-A-01</td>\n",
       "      <td>4</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>SW40937</td>\n",
       "      <td>YM60</td>\n",
       "      <td>83.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>PickFace</td>\n",
       "      <td>F</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>5-A-01</td>\n",
       "      <td>5</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>SW40631</td>\n",
       "      <td>YUCA60-PAH</td>\n",
       "      <td>84.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>Null</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>S-A-01</td>\n",
       "      <td>S</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>SW35956</td>\n",
       "      <td>YMCM30</td>\n",
       "      <td>639.0</td>\n",
       "      <td>639.0</td>\n",
       "      <td>Null</td>\n",
       "      <td>L</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>7-A-01</td>\n",
       "      <td>7</td>\n",
       "      <td>A</td>\n",
       "      <td>1</td>\n",
       "      <td>22822</td>\n",
       "      <td>YMBAV90</td>\n",
       "      <td>107.0</td>\n",
       "      <td>107.0</td>\n",
       "      <td>Null</td>\n",
       "      <td>J</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>8-B-01</td>\n",
       "      <td>8</td>\n",
       "      <td>B</td>\n",
       "      <td>1</td>\n",
       "      <td>P31522 -1</td>\n",
       "      <td>DCHEWL7</td>\n",
       "      <td>172.0</td>\n",
       "      <td>250366.0</td>\n",
       "      <td>Goodsin</td>\n",
       "      <td>O</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>8-C-42</td>\n",
       "      <td>8</td>\n",
       "      <td>C</td>\n",
       "      <td>42</td>\n",
       "      <td>N968120240</td>\n",
       "      <td>IMOV01</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>PickFace</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>715</th>\n",
       "      <td>6-D-42</td>\n",
       "      <td>6</td>\n",
       "      <td>D</td>\n",
       "      <td>42</td>\n",
       "      <td>P00623-3</td>\n",
       "      <td>YMSS7LR</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>Goodsin</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>719</th>\n",
       "      <td>5-D-42</td>\n",
       "      <td>5</td>\n",
       "      <td>D</td>\n",
       "      <td>42</td>\n",
       "      <td>103026SW</td>\n",
       "      <td>YSO500</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>1368.0</td>\n",
       "      <td>PickFace</td>\n",
       "      <td>X</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>827</th>\n",
       "      <td>8-E-42</td>\n",
       "      <td>8</td>\n",
       "      <td>E</td>\n",
       "      <td>42</td>\n",
       "      <td>N968120240</td>\n",
       "      <td>IMOV01</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>360000.0</td>\n",
       "      <td>Goodsin</td>\n",
       "      <td>J</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>872</th>\n",
       "      <td>6-E-42</td>\n",
       "      <td>6</td>\n",
       "      <td>E</td>\n",
       "      <td>42</td>\n",
       "      <td>P09523-03</td>\n",
       "      <td>YMSS7MR</td>\n",
       "      <td>1520.0</td>\n",
       "      <td>1520.0</td>\n",
       "      <td>Goodsin</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>994 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      BinNo FloorNo AisleNo  BayNo  BatchLotNo   StockCode  StockInHand  \\\n",
       "14   4-A-01       4       A      1     SW40937        YM60         83.0   \n",
       "95   5-A-01       5       A      1     SW40631  YUCA60-PAH         84.0   \n",
       "106  S-A-01       S       A      1     SW35956      YMCM30        639.0   \n",
       "235  7-A-01       7       A      1       22822     YMBAV90        107.0   \n",
       "237  8-B-01       8       B      1   P31522 -1     DCHEWL7        172.0   \n",
       "..      ...     ...     ...    ...         ...         ...          ...   \n",
       "492  8-C-42       8       C     42  N968120240      IMOV01     360000.0   \n",
       "715  6-D-42       6       D     42    P00623-3     YMSS7LR       1300.0   \n",
       "719  5-D-42       5       D     42    103026SW      YSO500       1368.0   \n",
       "827  8-E-42       8       E     42  N968120240      IMOV01     360000.0   \n",
       "872  6-E-42       6       E     42   P09523-03     YMSS7MR       1520.0   \n",
       "\n",
       "     SumofStock   BinType BinZone  \n",
       "14         83.0  PickFace       F  \n",
       "95         84.0      Null       Q  \n",
       "106       639.0      Null       L  \n",
       "235       107.0      Null       J  \n",
       "237    250366.0   Goodsin       O  \n",
       "..          ...       ...     ...  \n",
       "492    360000.0  PickFace       P  \n",
       "715      1300.0   Goodsin       S  \n",
       "719      1368.0  PickFace       X  \n",
       "827    360000.0   Goodsin       J  \n",
       "872      1520.0   Goodsin       S  \n",
       "\n",
       "[994 rows x 10 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "8e5056d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      " * Serving Flask app \"__main__\" (lazy loading)\n",
      " * Environment: production\n",
      "   WARNING: This is a development server. Do not use it in a production deployment.\n",
      "   Use a production WSGI server instead.\n",
      " * Debug mode: off\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " * Running on http://127.0.0.1:8050/ (Press CTRL+C to quit)\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:53] \"\u001b[37mGET / HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:53] \"\u001b[37mGET /_dash-layout HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:53] \"\u001b[37mGET /_dash-dependencies HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:53] \"\u001b[37mGET /_dash-component-suites/dash/dcc/async-dropdown.js HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:53] \"\u001b[37mPOST /_dash-update-component HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:54] \"\u001b[37mGET /_dash-component-suites/dash/dcc/async-graph.js HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:01:54] \"\u001b[37mGET /_dash-component-suites/dash/dcc/async-plotlyjs.js HTTP/1.1\u001b[0m\" 200 -\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "# Get unique floor numbers\n",
    "floor_numbers = sorted(data['FloorNo'].unique())\n",
    "\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "app.layout = html.Div(children=[\n",
    "    html.H1(\"Warehouse Bin Inventory\", style={\"text-align\": \"center\"}),\n",
    "\n",
    "    # Filter components\n",
    "    html.Div(style={'display': 'flex'}, children=[\n",
    "        html.Div(style={'flex': '1'}, children=[\n",
    "            html.H2(\"Search by Stock Code\"),\n",
    "            dcc.Input(id=\"stock-code-input\", placeholder=\"Enter Stock Code\")\n",
    "        ]),\n",
    "\n",
    "        html.Div(style={'flex': '1'}, children=[\n",
    "            html.H3(\"Filter by Bin Type\"),\n",
    "            dcc.Dropdown(\n",
    "                id=\"bin-type-dropdown\",\n",
    "                options=[{\"label\": bin_type, \"value\": bin_type} for bin_type in data[\"BinType\"].unique()],\n",
    "                value=\"All\",\n",
    "                placeholder=\"Select below\",\n",
    "                style={\"width\": \"150px\", \"height\": \"30px\"},\n",
    "                clearable=True,\n",
    "            )\n",
    "        ]),\n",
    "\n",
    "        html.Div(style={'flex': '1'}, children=[\n",
    "            html.H3(\"Filter by Bin Zone\"),\n",
    "            dcc.Dropdown(\n",
    "                id=\"bin-zone-dropdown\",\n",
    "                options=[{\"label\": bin_zone, \"value\": bin_zone} for bin_zone in data[\"BinZone\"].unique()],\n",
    "                value=\"All\",\n",
    "                placeholder=\"Select below\",\n",
    "                style={\"width\": \"150px\", \"height\": \"30px\"},\n",
    "                clearable=True,\n",
    "            )\n",
    "        ])\n",
    "    ]),\n",
    "\n",
    "    # Dynamic graphs\n",
    "    html.Div(id='floor-graphs-container')\n",
    "])\n",
    "\n",
    "     \n",
    "\n",
    "# Create dynamic graphs for each floor\n",
    "def create_floor_graph(floor_number, filtered_data):\n",
    "    fig = go.Figure(data=[go.Scatter(\n",
    "        x=filtered_data[\"BayNo\"],\n",
    "        y=filtered_data[\"AisleNo\"],\n",
    "        mode=\"markers\",\n",
    "        marker_symbol=\"square\",\n",
    "        marker_size=25,\n",
    "        marker_line_width=1,\n",
    "        marker_line_color=\"black\",\n",
    "        marker_colorscale=\"Viridis\",\n",
    "        marker_cmin=0,\n",
    "        marker_cmax=filtered_data[\"SumofStock\"].max(),\n",
    "        marker_color=filtered_data[\"SumofStock\"],\n",
    "        hoverinfo=\"text\",\n",
    "        hovertext=[\n",
    "            f\"BinNo: {row['BinNo']}<br>\\nFloorNo: {row['FloorNo']}<br>\\nAisleNo: {row['AisleNo']}<br>\\nBayNo: {row['BayNo']}<br>\\nBatchLotNo: {row['BatchLotNo']}<br>\\nStockCode: {row['StockCode']}<br>\\nStockInHand: {row['StockInHand']}<br>\\nSumofStock: {row['SumofStock']}\"\n",
    "            for index, row in filtered_data.iterrows()\n",
    "        ]\n",
    "    )])\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=f\"Floor {floor_number} - Warehouse Bin Inventory\",\n",
    "        xaxis_title=\"BayNo\",\n",
    "        yaxis_title=\"AisleNo\",\n",
    "        xaxis_type=\"category\",\n",
    "        yaxis_type=\"category\",\n",
    "        coloraxis_colorbar=dict(title=\"SumofStock\")\n",
    "    )\n",
    "\n",
    "    return fig\n",
    "\n",
    "@app.callback(\n",
    "    Output('floor-graphs-container', 'children'),\n",
    "    [\n",
    "        Input(\"stock-code-input\", \"value\"),\n",
    "        Input(\"bin-type-dropdown\", \"value\"),\n",
    "        Input(\"bin-zone-dropdown\", \"value\")\n",
    "    ]\n",
    ")\n",
    "def update_floor_graphs(stock_code, bin_type, bin_zone):\n",
    "    filtered_data = data\n",
    "\n",
    "    if stock_code is not None and stock_code != \"\":\n",
    "        filtered_data = filtered_data[filtered_data[\"StockCode\"] == stock_code]\n",
    "\n",
    "    if bin_type != \"All\":\n",
    "        filtered_data = filtered_data[filtered_data[\"BinType\"] == bin_type]\n",
    "\n",
    "    if bin_zone != \"All\":\n",
    "        filtered_data = filtered_data[filtered_data[\"BinZone\"] == bin_zone]\n",
    "\n",
    "    floor_graphs = []\n",
    "\n",
    "    for floor_number in floor_numbers:\n",
    "        floor_data = filtered_data[filtered_data[\"FloorNo\"] == floor_number]\n",
    "        floor_graph = create_floor_graph(floor_number, floor_data)\n",
    "        floor_graphs.append(\n",
    "            dcc.Graph(\n",
    "                figure=floor_graph,\n",
    "                style={'width': '100%'}\n",
    "            )\n",
    "        )\n",
    "\n",
    "    return floor_graphs\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    app.run_server(debug=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3031bb15",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      "Dash is running on http://127.0.0.1:8050/\n",
      "\n",
      " * Serving Flask app \"__main__\" (lazy loading)\n",
      " * Environment: production\n",
      "   WARNING: This is a development server. Do not use it in a production deployment.\n",
      "   Use a production WSGI server instead.\n",
      " * Debug mode: off\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " * Running on http://127.0.0.1:8050/ (Press CTRL+C to quit)\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:21] \"\u001b[37mGET / HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:22] \"\u001b[37mGET /_dash-layout HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:22] \"\u001b[37mGET /_dash-dependencies HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:22] \"\u001b[37mGET /_dash-component-suites/dash/dcc/async-dropdown.js HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:22] \"\u001b[37mPOST /_dash-update-component HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:22] \"\u001b[37mGET /_dash-component-suites/dash/dcc/async-graph.js HTTP/1.1\u001b[0m\" 200 -\n",
      "127.0.0.1 - - [25/Oct/2023 12:00:22] \"\u001b[37mGET /_dash-component-suites/dash/dcc/async-plotlyjs.js HTTP/1.1\u001b[0m\" 200 -\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "# Get unique floor numbers\n",
    "floor_numbers = sorted(data['FloorNo'].unique())\n",
    "\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "app.layout = html.Div(children=[\n",
    "    html.H1(\"Warehouse Bin Inventory\", style={\"text-align\": \"center\"}),\n",
    "\n",
    "    # Filter components\n",
    "    html.Div(style={'display': 'flex'}, children=[\n",
    "        html.Div(style={'flex': '1'}, children=[\n",
    "            html.H2(\"Search by Stock Code\"),\n",
    "            dcc.Input(id=\"stock-code-input\", placeholder=\"Enter Stock Code\")\n",
    "        ]),\n",
    "\n",
    "        html.Div(style={'flex': '1'}, children=[\n",
    "            html.H3(\"Filter by Bin Type\"),\n",
    "            dcc.Dropdown(\n",
    "                id=\"bin-type-dropdown\",\n",
    "                options=[{\"label\": bin_type, \"value\": bin_type} for bin_type in data[\"BinType\"].unique()],\n",
    "                value=\"All\",\n",
    "                placeholder=\"Select below\",\n",
    "                style={\"width\": \"150px\", \"height\": \"30px\"},\n",
    "                clearable=True,\n",
    "            )\n",
    "        ]),\n",
    "\n",
    "        html.Div(style={'flex': '1'}, children=[\n",
    "            html.H3(\"Filter by Bin Zone\"),\n",
    "            dcc.Dropdown(\n",
    "                id=\"bin-zone-dropdown\",\n",
    "                options=[{\"label\": bin_zone, \"value\": bin_zone} for bin_zone in data[\"BinZone\"].unique()],\n",
    "                value=\"All\",\n",
    "                placeholder=\"Select below\",\n",
    "                style={\"width\": \"150px\", \"height\": \"30px\"},\n",
    "                clearable=True,\n",
    "            )\n",
    "        ])\n",
    "    ]),\n",
    "\n",
    "    # Dynamic graphs\n",
    "    html.Div(id='floor-graphs-container')\n",
    "])\n",
    "\n",
    "# Create dynamic graphs for each floor\n",
    "def create_floor_graph(floor_number, filtered_data):\n",
    "    # Sort the y-axis values (AisleNo) alphabetically\n",
    "    filtered_data = filtered_data.sort_values(by=[\"BayNo\", \"AisleNo\"],ascending=[True, True])\n",
    "    \n",
    "    \n",
    "\n",
    "    fig = go.Figure(data=[go.Scatter(\n",
    "        x=filtered_data[\"BayNo\"],\n",
    "        y=filtered_data[\"AisleNo\"],\n",
    "        mode=\"markers\",\n",
    "        marker_symbol=\"square\",\n",
    "        marker_size=25,\n",
    "        marker_line_width=1,\n",
    "        marker_line_color=\"black\",\n",
    "        marker_colorscale=\"Viridis\",\n",
    "        marker_cmin=0,\n",
    "        marker_cmax=filtered_data[\"SumofStock\"].max(),\n",
    "        marker_color=filtered_data[\"SumofStock\"],\n",
    "        hoverinfo=\"text\",\n",
    "        hovertext=[\n",
    "            f\"BinNo: {row['BinNo']}<br>\\nFloorNo: {row['FloorNo']}<br>\\nAisleNo: {row['AisleNo']}<br>\\nBayNo: {row['BayNo']}<br>\\nBatchLotNo: {row['BatchLotNo']}<br>\\nStockCode: {row['StockCode']}<br>\\nStockInHand: {row['StockInHand']}<br>\\nSumofStock: {row['SumofStock']}\"\n",
    "            for index, row in filtered_data.iterrows()\n",
    "        ]\n",
    "    )])\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=f\"Floor {floor_number} - Warehouse Bin Inventory\",\n",
    "        xaxis_title=\"BayNo\",\n",
    "        yaxis_title=\"AisleNo\",\n",
    "        xaxis_type=\"category\",\n",
    "        yaxis_type=\"category\",\n",
    "        coloraxis_colorbar=dict(title=\"SumofStock\")\n",
    "    )\n",
    "\n",
    "    return fig\n",
    "\n",
    "@app.callback(\n",
    "    Output('floor-graphs-container', 'children'),\n",
    "    [\n",
    "        Input(\"stock-code-input\", \"value\"),\n",
    "        Input(\"bin-type-dropdown\", \"value\"),\n",
    "        Input(\"bin-zone-dropdown\", \"value\")\n",
    "    ]\n",
    ")\n",
    "def update_floor_graphs(stock_code, bin_type, bin_zone):\n",
    "    filtered_data = data\n",
    "\n",
    "    if stock_code is not None and stock_code != \"\":\n",
    "        filtered_data = filtered_data[filtered_data[\"StockCode\"] == stock_code]\n",
    "\n",
    "    if bin_type != \"All\":\n",
    "        filtered_data = filtered_data[filtered_data[\"BinType\"] == bin_type]\n",
    "\n",
    "    if bin_zone != \"All\":\n",
    "        filtered_data = filtered_data[filtered_data[\"BinZone\"] == bin_zone]\n",
    "\n",
    "    floor_graphs = []\n",
    "\n",
    "    for floor_number in floor_numbers:\n",
    "        floor_data = filtered_data[filtered_data[\"FloorNo\"] == floor_number]\n",
    "        floor_graph = create_floor_graph(floor_number, floor_data)\n",
    "        floor_graphs.append(\n",
    "            dcc.Graph(\n",
    "                figure=floor_graph,\n",
    "                style={'width': '49%', 'display': 'inline-block'}  # Adjust the width and layout\n",
    "            )\n",
    "        )\n",
    "\n",
    "    return floor_graphs\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    app.run_server(debug=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec9a6f82",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
